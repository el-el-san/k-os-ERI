name: Flutter Android CI

on:
  workflow_dispatch:
  push:
    paths:
      - 'flutter/direct_drawing_generator/**'
      - '.github/workflows/flutter-android.yml'
  pull_request:
    paths:
      - 'flutter/direct_drawing_generator/**'
      - '.github/workflows/flutter-android.yml'

jobs:
  build-android:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: flutter/direct_drawing_generator
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.22.2'

      - name: Ensure Android platform scaffolding
        run: flutter create --platforms android --no-pub .

      - name: Align Kotlin stdlib versions
        run: |
          cat <<'GRADLE' >> android/app/build.gradle
          configurations.all {
              resolutionStrategy.eachDependency { details ->
                  if (details.requested.group == "org.jetbrains.kotlin") {
                      details.useVersion "1.9.24"
                  }
              }
          }
          GRADLE

      - name: Flutter pub get
        run: flutter pub get

      - name: Flutter analyze
        run: flutter analyze

      - name: Run widget tests
        run: flutter test

      - name: Generate version info
        id: version
        run: |
          set -euo pipefail
          RUN_ATTEMPT=${{ github.run_attempt }}
          BUILD_BASE=$(git rev-list --count HEAD)
          BUILD_NUMBER=$((BUILD_BASE * 10 + RUN_ATTEMPT))
          VERSION_STAMP=$(date -u +%Y%m%d)
          VERSION_NAME="0.${VERSION_STAMP}.${BUILD_BASE}"

          echo "build_number=$BUILD_NUMBER" >> "$GITHUB_OUTPUT"
          echo "version_name=$VERSION_NAME" >> "$GITHUB_OUTPUT"

          {
            echo "Resolved version components"
            echo "  Commit count (base): $BUILD_BASE"
            echo "  Run attempt: $RUN_ATTEMPT"
            echo "  Build number: $BUILD_NUMBER"
            echo "  Version name: $VERSION_NAME"
          } | tee version-info.txt

      - name: Update pubspec.yaml with version
        run: |
          VERSION="${{ steps.version.outputs.version_name }}+${{ steps.version.outputs.build_number }}"
          echo "Updating pubspec.yaml version to: $VERSION"
          sed -i "s/^version: .*/version: $VERSION/" pubspec.yaml
          echo "Updated pubspec.yaml:"
          grep "^version:" pubspec.yaml

      - name: Build Android APK (release)
        run: |
          flutter build apk --release \
            --build-number=${{ steps.version.outputs.build_number }} \
            --build-name=${{ steps.version.outputs.version_name }}

      - name: Rename APK and cleanup
        run: |
          APK_PATH="build/app/outputs/flutter-apk/app-release.apk"
          NEW_NAME="direct-drawing-generator-${{ steps.version.outputs.version_name }}+${{ steps.version.outputs.build_number }}.apk"

          # Rename the main APK
          if [ -f "$APK_PATH" ]; then
            mv "$APK_PATH" "build/app/outputs/flutter-apk/$NEW_NAME"
            echo "Created: $NEW_NAME"
            ls -lh "build/app/outputs/flutter-apk/$NEW_NAME"
          fi

          # Remove duplicate APKs from other directories to avoid confusion
          echo "Cleaning up duplicate APKs..."
          rm -f build/app/outputs/apk/release/*.apk
          echo "Cleanup complete"

      - name: Inspect APK outputs
        run: |
          echo "Final APK files:"
          find build/app/outputs -maxdepth 3 -type f -name '*.apk' -exec ls -lh {} \;

      - name: Upload APK artifact
        if: success()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: direct-drawing-apk-${{ steps.version.outputs.version_name }}-build${{ steps.version.outputs.build_number }}
          path: |
            flutter/direct_drawing_generator/build/app/outputs/flutter-apk/direct-drawing-generator-*.apk
            flutter/direct_drawing_generator/version-info.txt
          if-no-files-found: error
